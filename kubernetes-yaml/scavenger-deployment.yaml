---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: scavenger
rules:
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonset
      - namespaces
      - replicasets
      - statefulsets
      - endpoints
      - pods
    verbs: ["get", "list","delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: scavenger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: scavenger
subjects:
  - kind: ServiceAccount
    name: scavenger
    namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scavenger
  namespace: kube-system
---
apiVersion: v1
kind: Secret
metadata:
  name: scavenger
  namespace: kube-system
  annotations:
    kubernetes.io/service-account.name: scavenger
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scavenger-cm
  namespace: kube-system
data:
  # CPU阈值，单位core，1表示1个核心
  CPULIMIT: "0.9"
  # 内存阈值,单位MB
  MEMLIMIT: "100"
  # 排除的命令空间，不做资源监控
  NAMESPACE: "kube-system;argocd"
  # 设置删除的资源类型,Deployment;DaemonSet
  SOURCETYPE: "Deployment;DaemonSet;ReplicaSet"
  # prometheus所定义的job名称
  JOB: "k8s-test"
  # prometheus的url地址
  URL: "http://127.0.0.1:9090"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scavenger-config
  namespace: kube-system
data:
  dingtalk-mes.json: |-
    {
      "url": "https://oapi.dingtalk.com/robot/send?access_token=5ee47bfc6293f6bb41cb8f3bebb098a6187d3b6b307280b3420c02aeac8fc0dd",
      "body":{
        "msgtype": "markdown",
        "markdown": {
          "title": "====警告删除高负载资源====",
          "text": "====警告删除高负载资源====;即将删除资源:;namespace: {{namespace}};sourcename: {{sourcename}};删除时间:{{timeStamp}}"
        }
       }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: scavenger
  name: scavenger
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scavenger
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scavenger
    spec:
      affinity:
        podAntiAffinity:  # affinity 尽量避免多个pod部署在一个node上,除非node数量少于pod数量
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app" # 标签名
                    operator: In
                    values:
                      - watchSource # 标签值
              topologyKey: "kubernetes.io/name"
      containers:
      - image: registry-vpc.cn-hangzhou.aliyuncs.com/sunw/scavenger:v1
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: scavenger-cm
        lifecycle:
          preStop:
            exec:
              command: ["sh", "-c", "sleep 10"]
        name: scavenger
        volumeMounts:
          - name: scavenger-config
            mountPath: "/etc/scavenger/dingtalk-mes.json"
            subPath: dingtalk-mes.json
            readOnly: true
      volumes:
        - name: scavenger-config
          configMap:
            name: scavenger-config
    serviceAccount: scavenger
  strategy: # 更新策略
    rollingUpdate: # 滚动更新
      maxSurge: 1 # 最多超出的副本数量
      maxUnavailable: 1